// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  firstName String?
  lastName  String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  appointments Appointment[]

  @@map("users")
}

model Doctor {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  phone     String
  specialty String
  bio       String?
  imageUrl  String
  gender    Gender
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  appointments Appointment[]

  @@map("doctors")
}

model Appointment {
  id        String            @id @default(cuid())
  date      DateTime
  time      String
  duration  Int // duration in minutes
  status    AppointmentStatus @default(CONFIRMED)
  notes     String?
  reason    String?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  // foreign key-------
  userId   String
  doctorId String

  // relationShips----
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  Doctor Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  @@map("appointments")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum AppointmentStatus {
  CONFIRMED
  CANCELLED
  COMPLETED
}
